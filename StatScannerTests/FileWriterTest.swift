//
//  FileWriterTest.swift
//  StatsScannerTests
//
//  Created by Kamran Hussain on 7/21/22.
//

import XCTest
@testable import StatsScanner

final class FileWriterTest: XCTestCase {
    
    let crime = [[], ["CrimeRate", "Youth", "Southern", "Education", "ExpenditureYear0", "LabourForce", "Males", "MoreMales", "StateSize", "YouthUnemployment", "MatureUnemployment", "HighYouthUnemploy", "Wage", "BelowWage", "CrimeRate10", "Youth10", "Education10", "ExpenditureYear10", "LabourForce10", "Males10", "MoreMales10", "StateSize10", "YouthUnemploy10", "MatureUnemploy10", "HighYouthUnemploy10", "Wage10", "BelowWage10"], ["45.5", "135.0", "0.0", "12.4", "69.0", "540.0", "965.0", "0.0", "6.0", "80.0", "22.0", "1.0", "564.0", "139.0", "26.5", "135.0", "12.5", "71.0", "564.0", "974.0", "0.0", "6.0", "82.0", "20.0", "1.0", "632.0", "142.0"], ["52.3", "140.0", "0.0", "10.9", "55.0", "535.0", "1045.0", "1.0", "6.0", "135.0", "40.0", "1.0", "453.0", "200.0", "35.9", "135.0", "10.9", "54.0", "540.0", "1039.0", "1.0", "7.0", "138.0", "39.0", "1.0", "521.0", "210.0"], ["56.6", "157.0", "1.0", "11.2", "47.0", "512.0", "962.0", "0.0", "22.0", "97.0", "34.0", "0.0", "288.0", "276.0", "37.1", "153.0", "11.0", "44.0", "529.0", "959.0", "0.0", "24.0", "98.0", "33.0", "0.0", "359.0", "256.0"], ["60.3", "139.0", "1.0", "11.9", "46.0", "480.0", "968.0", "0.0", "19.0", "135.0", "53.0", "0.0", "457.0", "249.0", "42.7", "139.0", "11.8", "41.0", "497.0", "983.0", "0.0", "20.0", "131.0", "50.0", "0.0", "510.0", "235.0"], ["64.2", "126.0", "0.0", "12.2", "106.0", "599.0", "989.0", "0.0", "40.0", "78.0", "25.0", "1.0", "593.0", "171.0", "46.7", "125.0", "12.2", "97.0", "602.0", "989.0", "0.0", "42.0", "79.0", "24.0", "1.0", "660.0", "162.0"], ["67.6", "128.0", "0.0", "13.5", "67.0", "624.0", "972.0", "0.0", "28.0", "77.0", "25.0", "1.0", "507.0", "206.0", "47.9", "128.0", "13.8", "60.0", "621.0", "983.0", "0.0", "28.0", "81.0", "24.0", "1.0", "571.0", "199.0"], ["70.5", "130.0", "0.0", "14.1", "63.0", "641.0", "984.0", "0.0", "14.0", "70.0", "21.0", "1.0", "486.0", "196.0", "50.6", "153.0", "14.1", "57.0", "641.0", "993.0", "0.0", "14.0", "71.0", "23.0", "1.0", "556.0", "176.0"], ["73.2", "143.0", "0.0", "12.9", "66.0", "537.0", "977.0", "0.0", "10.0", "114.0", "35.0", "1.0", "487.0", "166.0", "55.9", "143.0", "13.0", "63.0", "549.0", "973.0", "0.0", "11.0", "119.0", "36.0", "1.0", "561.0", "168.0"], ["75.0", "141.0", "0.0", "12.9", "56.0", "523.0", "968.0", "0.0", "4.0", "107.0", "37.0", "0.0", "489.0", "170.0", "61.8", "153.0", "12.9", "54.0", "538.0", "968.0", "0.0", "5.0", "110.0", "36.0", "1.0", "550.0", "126.0"], ["78.1", "133.0", "0.0", "11.4", "51.0", "599.0", "1024.0", "1.0", "7.0", "99.0", "27.0", "1.0", "425.0", "225.0", "65.4", "134.0", "11.2", "47.0", "600.0", "1024.0", "1.0", "7.0", "97.0", "28.0", "1.0", "499.0", "215.0"], ["79.8", "142.0", "1.0", "12.9", "45.0", "533.0", "969.0", "0.0", "18.0", "94.0", "33.0", "0.0", "318.0", "250.0", "71.4", "142.0", "13.1", "44.0", "552.0", "969.0", "0.0", "19.0", "93.0", "36.0", "0.0", "378.0", "247.0"], ["82.3", "123.0", "0.0", "12.5", "97.0", "526.0", "948.0", "0.0", "113.0", "124.0", "50.0", "0.0", "572.0", "158.0", "75.4", "134.0", "12.4", "87.0", "529.0", "949.0", "0.0", "117.0", "125.0", "49.0", "0.0", "639.0", "146.0"], ["83.1", "135.0", "0.0", "13.6", "62.0", "595.0", "986.0", "0.0", "22.0", "77.0", "27.0", "0.0", "529.0", "190.0", "77.3", "137.0", "13.7", "61.0", "599.0", "993.0", "0.0", "23.0", "80.0", "28.0", "0.0", "591.0", "189.0"], ["84.9", "121.0", "0.0", "13.2", "118.0", "547.0", "964.0", "0.0", "25.0", "84.0", "29.0", "0.0", "689.0", "126.0", "78.6", "132.0", "13.3", "115.0", "538.0", "968.0", "0.0", "25.0", "82.0", "30.0", "0.0", "742.0", "127.0"], ["85.6", "166.0", "1.0", "11.4", "58.0", "521.0", "973.0", "0.0", "46.0", "72.0", "26.0", "0.0", "396.0", "237.0", "80.6", "153.0", "11.2", "54.0", "543.0", "983.0", "0.0", "47.0", "76.0", "25.0", "1.0", "568.0", "246.0"], ["88.0", "140.0", "0.0", "12.9", "71.0", "632.0", "1029.0", "1.0", "7.0", "100.0", "24.0", "1.0", "526.0", "174.0", "82.2", "130.0", "12.9", "68.0", "620.0", "1024.0", "1.0", "8.0", "104.0", "25.0", "1.0", "570.0", "182.0"], ["92.3", "126.0", "0.0", "12.7", "74.0", "602.0", "984.0", "0.0", "34.0", "102.0", "33.0", "1.0", "557.0", "195.0", "87.5", "134.0", "12.9", "67.0", "599.0", "982.0", "0.0", "33.0", "107.0", "34.0", "1.0", "621.0", "199.0"], ["94.3", "130.0", "0.0", "13.3", "128.0", "536.0", "934.0", "0.0", "51.0", "78.0", "34.0", "0.0", "627.0", "135.0", "92.9", "127.0", "13.3", "128.0", "530.0", "949.0", "0.0", "52.0", "79.0", "33.0", "0.0", "692.0", "140.0"], ["95.3", "125.0", "0.0", "12.0", "90.0", "586.0", "964.0", "0.0", "97.0", "105.0", "43.0", "0.0", "617.0", "163.0", "94.1", "134.0", "11.9", "81.0", "571.0", "971.0", "0.0", "99.0", "106.0", "41.0", "0.0", "679.0", "162.0"], ["96.8", "151.0", "1.0", "10.0", "58.0", "510.0", "950.0", "0.0", "33.0", "108.0", "41.0", "0.0", "394.0", "261.0", "96.2", "161.0", "10.1", "56.0", "515.0", "1001.0", "1.0", "32.0", "110.0", "40.0", "0.0", "465.0", "254.0"], ["97.4", "152.0", "1.0", "10.8", "57.0", "530.0", "986.0", "0.0", "30.0", "92.0", "43.0", "0.0", "405.0", "264.0", "97.8", "152.0", "11.0", "53.0", "541.0", "989.0", "0.0", "30.0", "92.0", "41.0", "0.0", "470.0", "243.0"], ["98.7", "162.0", "1.0", "12.1", "75.0", "522.0", "996.0", "0.0", "40.0", "73.0", "27.0", "0.0", "496.0", "224.0", "99.9", "162.0", "12.0", "70.0", "533.0", "992.0", "0.0", "41.0", "80.0", "28.0", "0.0", "562.0", "229.0"], ["99.9", "149.0", "1.0", "10.7", "61.0", "515.0", "953.0", "0.0", "36.0", "86.0", "35.0", "0.0", "395.0", "251.0", "101.4", "150.0", "10.7", "54.0", "520.0", "952.0", "0.0", "35.0", "84.0", "32.0", "0.0", "476.0", "249.0"], ["103.0", "177.0", "1.0", "11.0", "58.0", "638.0", "974.0", "0.0", "24.0", "76.0", "28.0", "0.0", "382.0", "254.0", "103.5", "164.0", "10.9", "56.0", "638.0", "978.0", "0.0", "25.0", "79.0", "28.0", "0.0", "456.0", "257.0"], ["104.3", "134.0", "0.0", "12.5", "75.0", "595.0", "972.0", "0.0", "47.0", "83.0", "31.0", "0.0", "580.0", "172.0", "104.5", "133.0", "12.7", "71.0", "599.0", "982.0", "0.0", "50.0", "87.0", "32.0", "0.0", "649.0", "182.0"], ["105.9", "130.0", "0.0", "13.4", "90.0", "623.0", "1049.0", "1.0", "3.0", "113.0", "40.0", "0.0", "588.0", "160.0", "106.4", "153.0", "13.4", "91.0", "622.0", "1050.0", "1.0", "3.0", "119.0", "41.0", "0.0", "649.0", "159.0"], ["106.6", "157.0", "1.0", "11.1", "65.0", "553.0", "955.0", "0.0", "39.0", "81.0", "28.0", "0.0", "421.0", "239.0", "107.8", "156.0", "11.2", "62.0", "562.0", "956.0", "0.0", "39.0", "85.0", "29.0", "0.0", "499.0", "243.0"], ["107.2", "148.0", "0.0", "13.7", "72.0", "601.0", "998.0", "0.0", "9.0", "84.0", "20.0", "1.0", "590.0", "144.0", "110.1", "134.0", "13.9", "66.0", "602.0", "999.0", "0.0", "9.0", "87.0", "15.0", "0.0", "656.0", "151.0"], ["108.3", "126.0", "0.0", "13.8", "97.0", "542.0", "990.0", "0.0", "18.0", "102.0", "35.0", "0.0", "589.0", "166.0", "110.5", "126.0", "13.8", "97.0", "549.0", "993.0", "0.0", "19.0", "103.0", "34.0", "1.0", "659.0", "160.0"], ["109.4", "135.0", "1.0", "11.4", "123.0", "537.0", "978.0", "0.0", "31.0", "89.0", "34.0", "0.0", "631.0", "165.0", "113.5", "134.0", "11.3", "115.0", "529.0", "978.0", "0.0", "32.0", "93.0", "35.0", "0.0", "703.0", "175.0"], ["112.1", "142.0", "1.0", "10.9", "81.0", "497.0", "956.0", "0.0", "33.0", "116.0", "47.0", "0.0", "427.0", "247.0", "116.3", "147.0", "10.7", "77.0", "501.0", "962.0", "0.0", "33.0", "117.0", "44.0", "0.0", "500.0", "256.0"], ["114.3", "127.0", "1.0", "12.8", "82.0", "519.0", "982.0", "0.0", "4.0", "97.0", "38.0", "0.0", "620.0", "168.0", "119.7", "125.0", "12.9", "79.0", "510.0", "945.0", "0.0", "4.0", "99.0", "39.0", "0.0", "696.0", "170.0"], ["115.1", "131.0", "0.0", "13.7", "78.0", "574.0", "1038.0", "1.0", "7.0", "142.0", "42.0", "1.0", "540.0", "176.0", "124.5", "134.0", "13.6", "73.0", "581.0", "1029.0", "1.0", "7.0", "143.0", "41.0", "1.0", "615.0", "177.0"], ["117.2", "136.0", "0.0", "12.9", "95.0", "574.0", "1012.0", "1.0", "29.0", "111.0", "37.0", "1.0", "622.0", "162.0", "127.8", "140.0", "13.0", "96.0", "581.0", "1011.0", "1.0", "29.0", "115.0", "36.0", "1.0", "691.0", "169.0"], ["119.7", "119.0", "0.0", "11.9", "166.0", "521.0", "938.0", "0.0", "168.0", "92.0", "36.0", "0.0", "637.0", "154.0", "129.8", "120.0", "11.9", "157.0", "524.0", "935.0", "0.0", "180.0", "93.0", "27.0", "1.0", "698.0", "169.0"], ["121.6", "147.0", "1.0", "13.9", "63.0", "560.0", "972.0", "0.0", "23.0", "76.0", "24.0", "1.0", "462.0", "233.0", "130.7", "139.0", "14.0", "64.0", "571.0", "970.0", "0.0", "24.0", "78.0", "24.0", "1.0", "511.0", "220.0"], ["123.4", "145.0", "1.0", "11.7", "82.0", "560.0", "981.0", "0.0", "96.0", "88.0", "31.0", "0.0", "488.0", "228.0", "132.5", "154.0", "11.8", "74.0", "563.0", "980.0", "0.0", "99.0", "89.0", "29.0", "1.0", "550.0", "230.0"], ["127.2", "132.0", "0.0", "10.4", "87.0", "564.0", "953.0", "0.0", "43.0", "83.0", "32.0", "0.0", "513.0", "227.0", "134.6", "135.0", "10.2", "83.0", "560.0", "948.0", "0.0", "44.0", "83.0", "32.0", "0.0", "589.0", "234.0"], ["132.4", "152.0", "0.0", "12.0", "82.0", "571.0", "1018.0", "1.0", "10.0", "103.0", "28.0", "1.0", "537.0", "215.0", "137.5", "151.0", "12.1", "76.0", "567.0", "1079.0", "1.0", "11.0", "105.0", "27.0", "1.0", "617.0", "204.0"], ["135.5", "125.0", "0.0", "12.5", "113.0", "567.0", "985.0", "0.0", "78.0", "130.0", "58.0", "0.0", "626.0", "166.0", "140.5", "140.0", "12.5", "105.0", "571.0", "993.0", "0.0", "77.0", "131.0", "59.0", "0.0", "684.0", "174.0"], ["137.8", "141.0", "0.0", "14.2", "109.0", "591.0", "985.0", "0.0", "18.0", "91.0", "20.0", "1.0", "578.0", "174.0", "145.7", "142.0", "14.2", "101.0", "590.0", "987.0", "0.0", "19.0", "94.0", "19.0", "1.0", "649.0", "180.0"], ["140.8", "150.0", "0.0", "12.0", "109.0", "531.0", "964.0", "0.0", "9.0", "87.0", "38.0", "0.0", "559.0", "153.0", "150.6", "153.0", "12.0", "98.0", "539.0", "982.0", "0.0", "10.0", "88.0", "36.0", "0.0", "635.0", "151.0"], ["145.4", "131.0", "1.0", "12.2", "115.0", "542.0", "969.0", "0.0", "50.0", "79.0", "35.0", "0.0", "472.0", "206.0", "157.3", "131.0", "12.1", "109.0", "548.0", "976.0", "0.0", "52.0", "82.0", "34.0", "0.0", "539.0", "219.0"], ["149.3", "143.0", "0.0", "12.3", "103.0", "583.0", "1012.0", "1.0", "13.0", "96.0", "36.0", "0.0", "557.0", "194.0", "162.7", "142.0", "12.2", "95.0", "612.0", "1003.0", "1.0", "13.0", "97.0", "36.0", "0.0", "625.0", "196.0"], ["154.3", "124.0", "0.0", "12.3", "121.0", "580.0", "966.0", "0.0", "101.0", "77.0", "35.0", "0.0", "657.0", "170.0", "169.6", "134.0", "12.2", "116.0", "580.0", "987.0", "0.0", "104.0", "79.0", "36.0", "0.0", "719.0", "172.0"], ["157.7", "136.0", "0.0", "15.1", "149.0", "577.0", "994.0", "0.0", "157.0", "102.0", "39.0", "0.0", "673.0", "167.0", "177.2", "140.0", "15.2", "141.0", "578.0", "995.0", "0.0", "160.0", "110.0", "40.0", "0.0", "739.0", "169.0"], ["161.8", "131.0", "0.0", "13.2", "160.0", "631.0", "1071.0", "1.0", "3.0", "102.0", "41.0", "0.0", "674.0", "152.0", "178.2", "132.0", "13.2", "143.0", "632.0", "1058.0", "1.0", "4.0", "100.0", "40.0", "0.0", "748.0", "150.0"]]
    
    let awards = [["id", "num_awards", "prog", "math"], ["45", "1", "3", "41"], ["108", "1", "1", "41"], ["15", "1", "3", "44"], ["67", "1", "3", "42"], ["153", "1", "3", "40"], ["51", "1", "1", "42"], ["164", "1", "3", "46"], ["133", "1", "3", "40"], ["2", "1", "3", "33"], ["53", "1", "3", "46"], ["1", "1", "3", "40"], ["128", "0", "2", "38"], ["16", "1", "3", "44"], ["106", "1", "3", "37"], ["89", "1", "3", "40"], ["134", "1", "1", "39"], ["19", "1", "1", "43"], ["145", "0", "3", "38"], ["11", "1", "2", "45"], ["117", "0", "3", "39"], ["109", "1", "1", "42"], ["12", "1", "3", "45"], ["37", "1", "3", "40"], ["69", "0", "3", "40"], ["43", "1", "2", "43"], ["196", "1", "2", "49"], ["36", "1", "1", "44"], ["155", "1", "1", "46"], ["6", "0", "2", "46"], ["4", "1", "2", "41"], ["25", "0", "1", "42"], ["107", "0", "3", "47"], ["5", "1", "2", "43"], ["47", "1", "2", "49"], ["140", "1", "3", "40"], ["22", "1", "3", "39"], ["18", "1", "3", "49"], ["30", "0", "2", "42"], ["40", "0", "1", "43"], ["176", "0", "2", "41"], ["126", "0", "1", "57"], ["197", "0", "2", "50"], ["46", "0", "2", "44"], ["49", "0", "3", "39"], ["8", "0", "2", "52"], ["124", "1", "3", "41"], ["13", "0", "3", "39"], ["111", "0", "1", "39"], ["142", "0", "3", "52"], ["193", "1", "2", "48"], ["105", "3", "2", "45"], ["58", "2", "3", "40"], ["129", "3", "1", "46"], ["38", "3", "2", "50"], ["182", "0", "2", "43"], ["115", "0", "1", "43"], ["14", "1", "2", "54"], ["175", "1", "1", "42"], ["44", "2", "3", "45"], ["86", "2", "1", "54"], ["72", "3", "3", "47"], ["41", "1", "2", "45"], ["191", "0", "2", "43"], ["138", "1", "3", "40"], ["9", "0", "3", "52"], ["151", "1", "3", "52"], ["119", "0", "1", "45"], ["55", "1", "2", "49"], ["73", "1", "2", "53"], ["28", "0", "1", "54"], ["90", "2", "2", "50"], ["17", "0", "2", "48"], ["102", "0", "2", "51"], ["70", "0", "1", "41"], ["148", "1", "3", "51"], ["54", "0", "1", "46"], ["42", "0", "3", "55"], ["87", "0", "1", "46"], ["21", "2", "1", "61"], ["181", "1", "2", "45"], ["165", "1", "3", "54"], ["78", "1", "2", "54"], ["76", "1", "2", "51"], ["29", "0", "1", "49"], ["91", "1", "3", "56"], ["52", "2", "2", "53"], ["10", "1", "1", "49"], ["85", "3", "1", "57"], ["50", "0", "1", "42"], ["56", "1", "3", "46"], ["64", "1", "3", "45"], ["130", "1", "1", "55"], ["141", "1", "3", "47"], ["74", "0", "2", "50"], ["83", "1", "3", "41"], ["31", "0", "1", "52"], ["172", "1", "2", "57"], ["184", "1", "3", "53"], ["75", "1", "3", "51"], ["187", "1", "1", "57"], ["113", "1", "2", "51"], ["162", "0", "3", "40"], ["110", "2", "3", "50"], ["150", "2", "3", "57"], ["167", "0", "1", "35"], ["77", "1", "2", "49"], ["35", "0", "1", "50"], ["158", "1", "1", "55"], ["112", "0", "2", "48"], ["48", "0", "2", "52"], ["147", "1", "2", "53"], ["7", "1", "2", "59"], ["65", "2", "2", "66"], ["168", "0", "2", "57"], ["190", "1", "2", "54"], ["178", "0", "3", "57"], ["159", "1", "2", "54"], ["120", "0", "2", "54"], ["116", "0", "2", "54"], ["79", "2", "2", "49"], ["98", "1", "3", "51"], ["122", "3", "2", "58"], ["179", "1", "2", "60"], ["198", "1", "2", "51"], ["189", "1", "2", "63"], ["199", "1", "2", "50"], ["156", "1", "2", "53"], ["166", "0", "2", "53"], ["160", "0", "2", "55"], ["152", "1", "2", "56"], ["183", "0", "2", "49"], ["94", "1", "2", "61"], ["149", "0", "1", "49"], ["131", "0", "2", "57"], ["24", "0", "2", "66"], ["99", "0", "1", "56"], ["171", "3", "2", "60"], ["104", "1", "2", "57"], ["81", "1", "2", "59"], ["97", "1", "2", "58"], ["20", "0", "2", "57"], ["163", "3", "2", "64"], ["195", "0", "1", "60"], ["84", "0", "1", "54"], ["27", "1", "2", "61"], ["118", "1", "1", "58"], ["71", "0", "1", "56"], ["63", "0", "1", "60"], ["185", "0", "2", "55"], ["127", "3", "2", "57"], ["177", "0", "2", "62"], ["188", "0", "2", "56"], ["60", "0", "2", "51"], ["66", "2", "3", "56"], ["173", "0", "1", "61"], ["186", "1", "2", "63"], ["96", "5", "2", "61"], ["101", "0", "2", "67"], ["3", "0", "2", "48"], ["170", "1", "2", "61"], ["92", "0", "1", "57"], ["62", "0", "1", "48"], ["135", "2", "2", "65"], ["26", "4", "2", "62"], ["139", "1", "2", "61"], ["121", "0", "3", "53"], ["144", "1", "1", "58"], ["146", "1", "2", "64"], ["137", "3", "2", "65"], ["123", "1", "1", "56"], ["169", "1", "1", "63"], ["34", "3", "2", "57"], ["33", "2", "2", "72"], ["32", "0", "3", "66"], ["114", "0", "2", "62"], ["125", "1", "2", "58"], ["59", "1", "2", "63"], ["23", "3", "2", "64"], ["161", "2", "2", "72"], ["103", "0", "2", "64"], ["194", "6", "2", "69"], ["136", "4", "2", "70"], ["154", "1", "2", "66"], ["157", "0", "1", "58"], ["93", "2", "2", "62"], ["39", "2", "2", "67"], ["88", "1", "2", "64"], ["192", "2", "2", "63"], ["80", "1", "2", "68"], ["200", "1", "2", "75"], ["180", "0", "2", "69"], ["82", "1", "2", "65"], ["174", "2", "2", "71"], ["95", "5", "2", "71"], ["61", "1", "2", "60"], ["100", "2", "2", "71"], ["143", "2", "3", "75"], ["68", "1", "2", "71"], ["57", "0", "2", "72"], ["132", "3", "2", "73"], ["", "", "", ""]]

    override func setUpWithError() throws {
        // Put setup code here. This method is called before the invocation of each test method in the class.
    }

    override func tearDownWithError() throws {
        // Put teardown code here. This method is called after the invocation of each test method in the class.
    }

    func testExample() throws {
        // This is an example of a functional test case.
        // Use XCTAssert and related functions to verify your tests produce the correct results.
        // Any test you write for XCTest can be annotated as throws and async.
        // Mark your test throws to produce an unexpected failure when your test encounters an uncaught error.
        // Mark your test async to allow awaiting for asynchronous code to complete. Check the results with assertions afterwards.
    }

    func testPerformanceExample() throws {
        // This is an example of a performance test case.
        self.measure {
            // Put the code you want to measure the time of here.
        }
    }
    
    func testWriteCrimeData() throws {
        let db = DataBridge()
        db.writeCSV(fileName: "Crime_R.csv", data: self.crime)
    }
    
    func testWriteAwardsData() throws {
        let db = DataBridge()
        db.writeCSV(fileName: "Awards_R.csv", data: self.awards)
    }
}
